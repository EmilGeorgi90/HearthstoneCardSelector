@model PaginatedList<HsDbFirstRealAspNetProject.Models.DbModel.CardInfo>
@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Index";
}
<h2>index</h2>
<form asp-action="Index" method="get">
    <div class="form-actions">
        <p>
            Find: <input type="text" name="currentFilter" value="@ViewData["currentFilter"]" />
            <select class="selector" name="CardParPage" id="CardParPage">
                <option value="20" disabled>select how many cards you want par page</option>
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="30">30</option>
                <option value="40">40</option>
                <option value="50">50</option>
            </select>
            <select class="selector" name="Hero" id="Hero">
                <option value=""></option>
                <option value="Warlock">Warlock</option>
                <option value="Mage">Mage</option>
                <option value="Priest">Priest</option>
                <option value="Druid">Druid</option>
                <option value="Shamen">Shamen</option>
                <option value="Rouge">Rouge</option>
                <option value="Warrior">Warrior</option>
                <option value="Hunter">Hunter</option>
                <option value="Paladin">Paladin</option>
                <option value="Neutral">Neutral</option>
            </select>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CardSetParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-parPage="@ViewData["parPage"]">Card Set</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<div class="row container-fluid ">
    <div id="currentCardHolder" class="d-flex justify-content-between flex-wrap col-7">
        @{
            List<string> heroName = new List<string>() { "Malfurion Stormrage", "Rexxar", "Jaina Proudmoore", "Uther Lightbringer", "Anduin Wrynn", "Valeera Sanguinar", "Thrall", "Gul'dan", "Garrosh HellScream" };
            <form action="Index" method="get">
                @foreach (var item in Model)
                {
                    @if (item.Img != null)
                    {
                        if (heroName.Contains(item.Name))
                        {
                            <img class="@item.Class" src="~/images/@item.Img" onerror="this.style.display='none'" alt="hsPric" onclick="HeroSelector(this.className)" />
                        }
                        else
                        {
                            <img class="@item.Name cards" src="~/images/@item.Img" onclick="AddCard(this)" onerror="this.style.display='none'" alt="hsPric" data-Id="@item.CardInfoId" />
                        }
                    }
                }
            </form>
        }
    </div>
    <div id="cardHolder" class="cardHolder col-5">
    </div>
</div>
<div>


    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @{
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-parPage="@ViewData["parPage"]"
                       class="btn btn-default @prevDisabled">
                        prev
                    </a>
                </li>
                if (Model.PageIndex > 3)
                {
                    <li class="page-item">
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-page="@(1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-parPage="@ViewData["parPage"]"
                           class="page-link">
                            1
                        </a>
                    </li>
                }
                int number = 10 + Model.PageIndex;
                List<int> listNumber = new List<int>();
                int plusNumber = Model.PageIndex - 10;

                for (int i = Model.PageIndex; i < Model.PageIndex + 5; i++)
                {
                    if (plusNumber >= 10)
                    {
                        listNumber.Add(plusNumber);
                        plusNumber -= 10;
                    }
                }
                listNumber.Reverse();
                foreach (int item in listNumber)
                {

                    <li class="page-item">
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-page="@(item)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           asp-route-parPage="@ViewData["parPage"]"
                           class="page-link">
                            @{
                                int pageNumber = item;
                                @pageNumber
                            }
                        </a>
                    </li>

                }
                for (int i = Model.PageIndex; i < Model.PageIndex + 5; i++)
                {
                    if (Model.HasPreviousPage)
                    {
                        if (i - 2 <= 0 || Model.PageIndex == 2)
                        {
                            if (i - 1 < Model.TotalPages)
                            {
                                if (i - 1 == Model.PageIndex)
                                {
                                    <li class="page-item active">

                                        <a asp-action="Index"
                                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                                           asp-route-page="@(i-1)"
                                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                           asp-route-parPage="@ViewData["parPage"]"
                                           class="page-link">
                                            @{
                                                int pageNumber = i - 1;
                                            }
                                            @pageNumber
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">

                                        <a asp-action="Index"
                                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                                           asp-route-page="@(i-1)"
                                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                           asp-route-parPage="@ViewData["parPage"]"
                                           class="page-link">
                                            @{
                                                int pageNumber = i - 1;
                                            }
                                            @pageNumber
                                        </a>
                                    </li>

                                }
                            }
                        }
                        else
                        {
                            if (i - 2 < Model.TotalPages)
                            {
                                if (i - 2 == Model.PageIndex)
                                {
                                    <li class="page-item active">
                                        <a asp-action="Index"
                                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                                           asp-route-page="@(i-2)"
                                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                           asp-route-parPage="@ViewData["parPage"]"
                                           class="page-link">
                                            @{
                                                int pageNumber = i - 2;
                                            }
                                            @pageNumber
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a asp-action="Index"
                                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                                           asp-route-page="@(i-2)"
                                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                           asp-route-parPage="@ViewData["parPage"]"
                                           class="page-link">
                                            @{
                                                int pageNumber = i - 2;
                                            }
                                            @pageNumber
                                        </a>
                                    </li>
                                }
                            }
                        }
                    }

                    else if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-page="@(i)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               asp-route-parPage="@ViewData["parPage"]"
                               class="page-link">
                                @i
                            </a>
                        </li>
                    }
                }
                for (int i = Model.PageIndex; i < Model.PageIndex + 5; i++)
                {
                    if (number <= Model.TotalPages)
                    {
                        <li class="page-item">
                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-page="@(number)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               asp-route-parPage="@ViewData["parPage"]"
                               class="page-link">
                                @{
                                    int pageNumber = number;
                                }
                                @pageNumber
                            </a>
                        </li>
                        number += 10;
                    }
                }
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@(Model.TotalPages)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-parPage="@ViewData["parPage"]"
                       class="page-link">
                        @Model.TotalPages
                    </a>
                </li>
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-parPage="@ViewData["parPage"]"
                       class="btn btn-default @nextDisabled">
                        Next
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>